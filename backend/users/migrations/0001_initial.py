# Generated by Django 5.2.1 on 2025-05-30 17:39

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('userID', models.AutoField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('school_email', models.EmailField(max_length=254, unique=True)),
                ('user_gpa', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True)),
                ('major', models.CharField(max_length=100)),
                ('user_resume', models.FileField(upload_to='resumes/')),
                ('school_year', models.CharField(choices=[('FR', 'Freshman'), ('JR', 'Junior'), ('SR', 'Senior')], max_length=2)),
                ('expected_end_date', models.DateField(blank=True, null=True)),
                ('degree_level', models.CharField(choices=[('BA', 'Bachelor'), ('MA', 'Master'), ('PhD', 'PhD')], max_length=3)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
